---
version: "3"
services:
  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:v2.4
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./reverse-proxy/traefik.yaml:/etc/traefik/traefik.yml:ro
      - ./reverse-proxy/config.yaml:/etc/traefik/config.yml:ro
      - ./certs:/etc/certs:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PATCH,DELETE,CREATE"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.accessControlAllowHeaders=authorization,content-type"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=${FRONTEND_HOST},http://localhost:3000"
    depends_on:
      - api
      - frontend

  # db:
  #   container_name: db
  #   image: mongo:latest
  #   env_file:
  #     - .env
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - db-volume:/data/db
  #     - ./db/initdb.d:/docker-entrypoint-initdb.d
  #   restart: always
  #   networks:
  #     - backend

  api:
    container_name: api
    env_file:
      - .env
    build:
      context: api
    ports:
      - 36912:36912
    # depends_on:
    #   - db
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - proxy
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${BACKEND_HOST}`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.middlewares=cors"

  frontend:
    container_name: frontend
    ports:
      - 3000:3000
    build:
      args:
        REACT_APP_API: ${BACKEND_HOST}
        REACT_APP_GOOGLE_DRIVE_FOLDER: ${GOOGLE_DRIVE_FOLDER}
      context: frontend
    restart: always
    networks:
      - proxy
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_HOST}`)"
      - "traefik.http.routers.frontend.tls=true"

volumes:
  db-volume:

networks:
  proxy:
    external: true
  backend:
